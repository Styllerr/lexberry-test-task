[{"E:\\Repository\\lexberry-test-task\\src\\index.js":"1","E:\\Repository\\lexberry-test-task\\src\\App.js":"2","E:\\Repository\\lexberry-test-task\\src\\components\\Client\\Client.js":"3","E:\\Repository\\lexberry-test-task\\src\\api.js":"4","E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantsList.js":"5","E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantsItem.js":"6","E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantForm.js":"7","D:\\Repositoriy\\lexberry-test-task\\src\\index.js":"8","D:\\Repositoriy\\lexberry-test-task\\src\\App.js":"9","D:\\Repositoriy\\lexberry-test-task\\src\\components\\Client\\Client.js":"10","D:\\Repositoriy\\lexberry-test-task\\src\\api.js":"11","D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantsList.js":"12","D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantForm.js":"13","D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantsItem.js":"14"},{"size":197,"mtime":1607968594386,"results":"15","hashOfConfig":"16"},{"size":249,"mtime":1607971128114,"results":"17","hashOfConfig":"16"},{"size":3249,"mtime":1608048646679,"results":"18","hashOfConfig":"16"},{"size":1091,"mtime":1607985125559,"results":"19","hashOfConfig":"16"},{"size":1285,"mtime":1608085304717,"results":"20","hashOfConfig":"16"},{"size":759,"mtime":1608049724658,"results":"21","hashOfConfig":"16"},{"size":10182,"mtime":1608119644545,"results":"22","hashOfConfig":"16"},{"size":207,"mtime":1608024618809,"results":"23","hashOfConfig":"24"},{"size":262,"mtime":1608024618807,"results":"25","hashOfConfig":"24"},{"size":3249,"mtime":1608030959419,"results":"26","hashOfConfig":"24"},{"size":1091,"mtime":1608024618807,"results":"27","hashOfConfig":"24"},{"size":1285,"mtime":1608123316404,"results":"28","hashOfConfig":"24"},{"size":10299,"mtime":1608128861988,"results":"29","hashOfConfig":"24"},{"size":759,"mtime":1608123316402,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"k3wqjr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1gket68",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"E:\\Repository\\lexberry-test-task\\src\\index.js",[],["62","63"],"E:\\Repository\\lexberry-test-task\\src\\App.js",[],"E:\\Repository\\lexberry-test-task\\src\\components\\Client\\Client.js",["64","65"],"import React, { useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport api from '../../api';\r\nimport ApplicantsList from '../applicants/ApplicantsList';\r\n\r\nfunction Client() {\r\n    const [clientsList, setClientsList] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [value, setValue] = useState(null);\r\n    const [applicants, setApplicants] = useState([]);\r\n\r\n    const fetchClients = () => {\r\n        inputValue.length < 4\r\n            ? api.get('/clients')\r\n                .then(resp => setClientsList(resp.data.items))\r\n            : api.get('/clients?search[name]=' + inputValue)\r\n                .then(resp => setClientsList(resp.data.items))\r\n    }\r\n    const fetchApplicants = (id) => {\r\n        api.get('/applicants?filter[client:id]=' + id)\r\n                .then(resp => setApplicants(resp.data.items))\r\n    }\r\n    const filterOptions = createFilterOptions({\r\n        limit: 10,\r\n    });\r\n    useEffect(() => {\r\n        fetchClients();\r\n    }, [])\r\n    useEffect(() => {\r\n        fetchClients();\r\n    }, [inputValue, value])\r\n\r\n    useEffect(() => {\r\n        value\r\n            ? fetchApplicants(value.id)\r\n            : setApplicants([])\r\n    }, [value])\r\n    return (\r\n        <>\r\n            <Paper style={styles.paperClient}>\r\n                <h2>Клієнт</h2>\r\n                <Autocomplete\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    inputValue={inputValue}\r\n                    onInputChange={(event, newInputValue) => {\r\n                        setInputValue(newInputValue);\r\n                    }}\r\n                    filterOptions={filterOptions}\r\n                    id='combo-box'\r\n                    options={clientsList}\r\n                    getOptionLabel={(option) => option.label}\r\n                    getOptionSelected={(option) => option.label}\r\n                    size='small'\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label='Пошук/вибір клієнта' variant=\"outlined\" />}\r\n                />\r\n                {value\r\n                    ? <div>\r\n                        <h3>\r\n                            {value.name}\r\n                        </h3>\r\n                        <p>\r\n                            Телефон. {value.phone}\r\n                        </p>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Зберегти заявку\r\n                        </Button>\r\n                    </div>\r\n                    : null}\r\n            </Paper>\r\n            <Paper>\r\n                <ApplicantsList client={value} applicants={applicants}/>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Client\r\n\r\nconst styles = {\r\n    paperClient: {\r\n        marginBottom: '30px',\r\n        padding: '15px 25px 15px'\r\n    }\r\n}","E:\\Repository\\lexberry-test-task\\src\\api.js",[],"E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantsList.js",[],"E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantsItem.js",[],"E:\\Repository\\lexberry-test-task\\src\\components\\applicants\\ApplicantForm.js",[],"D:\\Repositoriy\\lexberry-test-task\\src\\index.js",[],["66","67"],"D:\\Repositoriy\\lexberry-test-task\\src\\App.js",[],"D:\\Repositoriy\\lexberry-test-task\\src\\components\\Client\\Client.js",["68","69"],"D:\\Repositoriy\\lexberry-test-task\\src\\api.js",[],"D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantsList.js",[],"D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantForm.js",[],"D:\\Repositoriy\\lexberry-test-task\\src\\components\\applicants\\ApplicantsItem.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":8,"nodeType":"76","endLine":33,"endColumn":10,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":36,"column":8,"nodeType":"76","endLine":36,"endColumn":27,"suggestions":"78"},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":8,"nodeType":"76","endLine":33,"endColumn":10,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"75","line":36,"column":8,"nodeType":"76","endLine":36,"endColumn":27,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchClients'. Either include it or remove the dependency array.","ArrayExpression",["85"],["86"],["83"],["84"],["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"89","fix":"93"},{"desc":"91","fix":"94"},"Update the dependencies array to be: [fetchClients]",{"range":"95","text":"96"},"Update the dependencies array to be: [fetchClients, inputValue, value]",{"range":"97","text":"98"},{"range":"99","text":"96"},{"range":"100","text":"98"},[1256,1258],"[fetchClients]",[1316,1335],"[fetchClients, inputValue, value]",[1256,1258],[1316,1335]]